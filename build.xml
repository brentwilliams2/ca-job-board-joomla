<?xml version="1.0" encoding="utf-8"?>
<project default="build">

  <!--
  Package archive file should look like this:

  - pkg_cajobboard.xml
  - packages <dir>
    |- com_cajobboard.zip
    |- lib_cajobboard.zip
    |- plg_sys_cajobboard.zip
    |- tpl_calligraphic.zip
  - pkg_script.php
  -->

  <!-- Get a nice timestamp to put in the filename -->
  <tstamp>
    <format property="version" pattern="%Y%m%d_%H%M"/>
  </tstamp>

  <!-- Set some default parameters -->
  <property name="build.dir" value="build" />
  <property name="release.dir" value="release" />
  <property name="source.dir" value="." />

  <property name="target.available" value="false" />

  <!-- Set and create the directory to hold separate extensions for this build -->
  <property name="archive.dir" value="${release.dir}/pkg_${project.name}_${version}" />

  <!-- Pull in project properties file -->
  <property file="build.properties" override="true"/>


  <target name="debug">
    <echo>This is the debug task.</echo>
  </target>

  <!-- ========================================================== -->
  <!-- Target: PREPARE                                            -->
  <!-- Set up the environment for creating a distribution package -->
  <!-- ========================================================== -->
  <target name="prepare">
    <phingcall target="clean" />
    <mkdir dir="${release.dir}" />
    <mkdir dir="${archive.dir}" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: CLEAN                                              -->
  <!-- Clean the build directory                                  -->
  <!-- ========================================================== -->
  <target name="clean">
    <available file="${build.dir}" type="dir" property="target.available" value="true" />
    <if>
      <equals arg1="${target.available}" arg2="1" />
      <then>
        <delete dir="${build.dir}" />
      </then>
    </if>
    <!-- Does nothing if the directory already exists -->
    <mkdir dir="${build.dir}" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: ARCHIVE                                            -->
  <!-- Create extension archives from the build folder            -->
  <!-- ========================================================== -->
  <target name="archive">
    <echo msg="Creating archive file for ${extension.name}..." />

    <zip destfile="${archive.dir}/${extension.name}_${version}.zip">
      <fileset dir="${build.dir}" >
        <include name="**/*"/>
      </fileset>
    </zip>
  </target>


  <!-- ========================================================== -->
  <!-- Target: BUILD                                              -->
  <!-- Call Component Build Tasks                                 -->
  <!-- ========================================================== -->
  <target name="build" depends="prepare">

    <!-- BUILD: Call Component Build Tasks -->
    <if>
      <contains string="${project.components}" substring="com_" />
      <then>
        <property name="build.work" value="true" />
        <foreach list="${project.components}" param="component.name" target="component" />
      </then>
    </if>

    <!-- BUILD: Call Modules Build Tasks -->
    <if>
      <contains string="${project.modules}" substring="mod_" />
      <then>
        <property name="build.work" value="true" />
        <foreach list="${project.modules}" param="module.name" target="module" />
      </then>
    </if>

    <!-- BUILD: Call Plugins Build Tasks -->
    <if>
      <contains string="${project.plugins}" substring="plg_" />
      <then>
        <property name="build.work" value="true" />
        <foreach list="${project.plugins}" param="plugin.name" target="plugin" />
      </then>
    </if>

    <!-- BUILD: Call Library Build Tasks -->
    <if>
      <contains string="${project.libraries}" substring="lib_" />
      <then>
        <property name="build.work" value="true" />
        <foreach list="${project.libraries}" param="library.name" target="library" />
      </then>
    </if>

    <!-- BUILD: Call Templates Build Tasks -->
    <if>
      <contains string="${project.templates}" substring="tpl_" />
      <then>
        <property name="build.work" value="true" />
        <foreach list="${project.templates}" param="template.name" target="template" />
      </then>
    </if>

    <!-- BUILD: Call Package Build Task -->
    <if>
      <istrue value="${build.work}"/>
      <then>
        <phingcall target="package" />
      </then>
      <else>
        <echo msg="No extensions were built, so no package built..." />
      </else>
    </if>
  </target>


  <!-- ========================================================== -->
  <!-- Target: COMPONENTS                                         -->
  <!-- Build target for components                                -->
  <!-- ========================================================== -->
  <target name="component">
    <copy todir="${build.dir}/${component.name}" haltonerror="false">
      <fileset dir="components/${component.name}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <phingcall target="archive">
        <property name="extension.name" value="${component.name}" />
    </phingcall>

    <phingcall target="clean" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: MODULES                                            -->
  <!-- Build target for modules                                   -->
  <!-- ========================================================== -->
  <target name="module">
    <copy todir="${build.dir}/${module.name}" haltonerror="false">
      <fileset dir="modules/${module.name}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <phingcall target="archive">
        <property name="extension.name" value="${module.name}" />
    </phingcall>

    <phingcall target="clean" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: PLUGINS                                            -->
  <!-- Build target for plugins                                   -->
  <!-- ========================================================== -->
  <target name="plugin">
    <copy todir="${build.dir}/${plugin.name}" haltonerror="false">
      <fileset dir="plugins/${plugin.name}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <phingcall target="archive">
        <property name="extension.name" value="${plugin.name}" />
    </phingcall>
    
    <phingcall target="clean" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: LIB                                                -->
  <!-- Build target for libraries                                 -->
  <!-- ========================================================== -->
  <target name="library">
    <copy todir="${build.dir}/${library.name}" haltonerror="false">
      <fileset dir="libraries/${library.name}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <phingcall target="archive">
        <property name="extension.name" value="${library.name}" />
    </phingcall>
    
    <phingcall target="clean" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: TEMPLATES                                          -->
  <!-- Build target for templates                                 -->
  <!-- ========================================================== -->
  <target name="template">
    <copy todir="${build.dir}/${template.name}" haltonerror="false">
      <fileset dir="templates/${template.name}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <phingcall target="archive">
        <property name="extension.name" value="${template.name}" />
    </phingcall>
    
    <phingcall target="clean" />
  </target>


  <!-- ========================================================== -->
  <!-- Target: PACKAGE                                            -->
  <!-- Build target for final package                             -->
  <!-- ========================================================== -->
  <target name="package">
    <echo msg="Creating package archive file for ${project.name}..." />

    <zip
      destfile="${release.dir}/pkg_${project.name}_${version}.zip" ignorelinks="true">
      <fileset dir="${archive.dir}" >
        <include name="**/*"/>
      </fileset>

      <fileset dir="${release.dir}" >
        <include name="lib_fof30-*.zip"/>
      </fileset>

      <fileset dir="${source.dir}" >
        <include name="LICENSE.md"/>
        <include name="README.md"/>
      </fileset>

      <fileset dir="${source.dir}/package" >
        <include name="pkg_${project.name}.xml"/>
        <include name="pkg_script.php"/>
      </fileset>
    </zip>

    <phingcall target="clean" />
  </target>

</project>